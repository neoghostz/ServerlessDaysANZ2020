AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless Days ANZ 2020 Demo
Parameters:
  Environment:
    Type: String
    Default: dev
  GitHash:
    Type: String
    Default: latest
  APIDomainName:
    Type: String
    Default: serverlessdays.elendel.com.au
  Certificate:
    Type: String
    Default: arn:aws:acm:us-east-1:293499315857:certificate/e6487f1e-46cc-47ac-a0da-c22ae565bef8
  HostedZoneId:
    Type: String
    Default: Z11STCZAFY5AJJ
  HostedZoneName:
    Type: String
    Default: elendel.com.au

Resources:

  Gateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub " Gateway {Environment}"
      StageName: !Ref Environment

  DomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: !Ref Certificate
      DomainName: !Sub "{GitHash}.{APIDomainName}"

  BasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref DomainName
      RestApiId: !Ref Gateway
      Stage: !Ref Environment

  Route53Record:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
      - Type: CNAME
        Name: !Sub "{GitHash}.{APIDomainName}"
        AliasTarget:
          HostedZoneId: !GetAtt DomainName.DistributionHostedZoneId
          DNSName: !GetAtt DomainName.DistributionDomainName

  ############ Layers  ############

  DemoCoreLayer:
      Type: AWS::Serverless::LayerVersion
      Properties:
        LayerName: !Sub "CoreLayer-{GitHash}"
        Description: Core classes and objects for Serverless Day Demo 
        ContentUri: ../src/layers
        CompatibleRuntimes:
          - python3.7
          - python3.8
        LicenseInfo: 'MIT'
        RetentionPolicy: Retain

  ############ /create_pdf ############

  CreatePDF:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/functions/create_pdf
      Handler: app.lambda_handler
      Runtime: python3.8
      Timeout: 60
      FunctionName: !Sub "CreatePDF_{GitHash}"
      Environment:
        Variables:
          Logging: DEBUG
      Layers:
        - !Ref DemoCoreLayer
      Tracing: Active
      Events:
        post:
          Type: Api
          Properties:
            RestApiId: !Ref Gateway
            Path: /create_pdf
            Method: POST
      Role: !GetAtt CreatePDFExecutionRole.Arn

  CreatePDFExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: create_pdf
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:*'
                  - 's3:ListBucket'
                  - 's3:ListBucket*'
                  - 's3:PutObject'
                  - 's3:PutObjectAcl'
                  - 'dynamodb:DescribeTable'
                  - 'dynamodb:Query'
                  - 'xray:PutTraceSegments'
                  - 'xray:PutTelemetryRecords'
                Resource: '*'

  ############ /delete_pdf ############

  DeletePDF:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/functions/delete_pdf
      Handler: app.lambda_handler
      Runtime: python3.8
      Timeout: 60
      FunctionName: !Sub "DeletePDF_{GitHash}"
      Environment:
        Variables:
          Logging: DEBUG
      Layers:
        - !Ref DemoCoreLayer
      Tracing: Active
      Events:
        post:
          Type: Api
          Properties:
            RestApiId: !Ref Gateway
            Path: /delete_pdf
            Method: POST
      Role: !GetAtt DeletePDFExecutionRole.Arn

  DeletePDFExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: delete_pdf
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:*'
                  - 's3:ListBucket'
                  - 's3:ListBucket*'
                  - 's3:DeleteObject'
                  - 's3:DeleteObjectVersion'
                  - 'dynamodb:DescribeTable'
                  - 'dynamodb:DeleteItem'
                  - 'dynamodb:Query'
                  - 'xray:PutTraceSegments'
                  - 'xray:PutTelemetryRecords'
                Resource: '*'

  ############ /get_pdf ############

  GetPDF:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/functions/get_pdf
      Handler: app.lambda_handler
      Runtime: python3.8
      Timeout: 60
      FunctionName: !Sub "GetPDF_{GitHash}"
      Environment:
        Variables:
          Logging: DEBUG
      Layers:
        - !Ref DemoCoreLayer
      Tracing: Active
      Events:
        post:
          Type: Api
          Properties:
            RestApiId: !Ref Gateway
            Path: /get_pdf
            Method: POST
      Role: !GetAtt GetPDFExecutionRole.Arn
      BinaryMediaTypes:
        - "application~1pdf"

  GetPDFExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: get_pdf
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:*'
                  - 's3:ListBucket'
                  - 's3:ListBucket*'
                  - 's3:GetObject'
                  - 's3:GetObject*'
                  - 'dynamodb:DescribeTable'
                  - 'dynamodb:Query'
                  - 'dynamodb:ListTables'
                  - 'dynamodb:GetItem'
                  - 'xray:PutTraceSegments'
                  - 'xray:PutTelemetryRecords'
                Resource: '*'

  ############ /list_pdf ############

  ListPDF:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src/functions/list_pdf
      Handler: app.lambda_handler
      Runtime: python3.8
      Timeout: 60
      FunctionName: !Sub "ListPDF_{GitHash}"
      Environment:
        Variables:
          Logging: DEBUG
      Layers:
      - !Ref DemoCoreLayer
      Tracing: Active
      Events:
        post:
          Type: Api
          Properties:
            RestApiId: !Ref Gateway
            Path: /list_pdf
            Method: POST
      Role: !GetAtt ListPDFExecutionRole.Arn

  ListPDFExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
      Policies:
        - PolicyName: list_pdf
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'ssm:*'
                  - 'dynamodb:DescribeTable'
                  - 'dynamodb:Query'
                  - 'dynamodb:ListTables'
                  - 'dynamodb:GetItem'
                  - 'xray:PutTraceSegments'
                  - 'xray:PutTelemetryRecords'
                Resource: '*'